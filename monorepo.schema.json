{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "$schema": {
      "description": "JSON Schema reference",
      "type": "string"
    },
    "version": {
      "description": "Config schema version",
      "default": "1.0.0",
      "type": "string",
      "const": "1.0.0"
    },
    "deps": {
      "description": "Dependency management configuration",
      "type": "object",
      "properties": {
        "taze": {
          "description": "Taze dependency updater configuration",
          "type": "object",
          "properties": {
            "runner": {
              "description": "Command runner for taze",
              "default": "npx",
              "type": "string",
              "enum": [
                "npx",
                "pnpx",
                "yarn",
                "bunx"
              ]
            },
            "configPath": {
              "description": "Path to taze configuration file"
            }
          },
          "required": [
            "runner"
          ],
          "additionalProperties": false
        },
        "checkUnused": {
          "description": "Check for unused dependencies",
          "default": true,
          "type": "boolean"
        },
        "checkMissing": {
          "description": "Check for missing dependencies",
          "default": true,
          "type": "boolean"
        },
        "checkVersionMismatch": {
          "description": "Check for version mismatches",
          "default": true,
          "type": "boolean"
        },
        "ignoredPackages": {
          "description": "Packages to ignore in checks",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versionGroups": {
          "description": "Groups of packages that must have matching dependency versions",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "packages": {
                "description": "Package patterns to group",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "dependencies": {
                "description": "Dependencies that must match versions",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "policy": {
                "description": "Version matching policy",
                "default": "semver",
                "type": "string",
                "enum": [
                  "exact",
                  "semver"
                ]
              }
            },
            "required": [
              "packages",
              "dependencies",
              "policy"
            ],
            "additionalProperties": false
          }
        }
      },
      "required": [
        "checkUnused",
        "checkMissing",
        "checkVersionMismatch",
        "ignoredPackages"
      ],
      "additionalProperties": false
    },
    "tsconfig": {
      "description": "TypeScript configuration management",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enable TypeScript config generation",
          "default": true,
          "type": "boolean"
        },
        "types": {
          "description": "Config types to generate",
          "default": [
            "web",
            "node",
            "builder"
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "web",
              "node",
              "builder"
            ]
          }
        },
        "configLocations": {
          "description": "Possible locations for app-specific configs relative to a package",
          "default": [
            "../config",
            "../../config",
            "../packages/config",
            "../../packages/config",
            "../../../packages/config",
            "../../../../packages/config"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "generateTypecheck": {
          "description": "Generate tsconfig.typecheck.json files",
          "default": true,
          "type": "boolean"
        },
        "filterPathsByDependencies": {
          "description": "Filter compilerOptions.paths to only include actual dependencies",
          "default": true,
          "type": "boolean"
        },
        "excludePatterns": {
          "description": "Patterns to exclude when scanning for packages",
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/build/**"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rootConfigDir": {
          "description": "Root config directory to skip during generation",
          "default": "packages/config",
          "type": "string"
        },
        "validation": {
          "description": "Validation options",
          "type": "object",
          "properties": {
            "checkMissing": {
              "description": "Check for missing tsconfig.json files",
              "default": true,
              "type": "boolean"
            },
            "checkExtends": {
              "description": "Validate extends chains",
              "default": true,
              "type": "boolean"
            },
            "checkConsistency": {
              "description": "Check compiler options consistency",
              "default": true,
              "type": "boolean"
            },
            "strictMode": {
              "description": "Enforce strict validation rules",
              "default": false,
              "type": "boolean"
            }
          },
          "required": [
            "checkMissing",
            "checkExtends",
            "checkConsistency",
            "strictMode"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "enabled",
        "types",
        "configLocations",
        "generateTypecheck",
        "filterPathsByDependencies",
        "excludePatterns",
        "rootConfigDir"
      ],
      "additionalProperties": false
    },
    "quality": {
      "description": "Code quality configuration",
      "type": "object",
      "properties": {
        "linting": {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enable linting checks",
              "default": true,
              "type": "boolean"
            },
            "fix": {
              "description": "Auto-fix linting issues",
              "default": false,
              "type": "boolean"
            },
            "configPath": {
              "description": "Path to ESLint config"
            }
          },
          "required": [
            "enabled",
            "fix"
          ],
          "additionalProperties": false
        },
        "typeChecking": {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enable type checking",
              "default": true,
              "type": "boolean"
            },
            "strict": {
              "description": "Use strict TypeScript settings",
              "default": true,
              "type": "boolean"
            },
            "configPath": {
              "description": "Path to TypeScript config"
            }
          },
          "required": [
            "enabled",
            "strict"
          ],
          "additionalProperties": false
        },
        "testing": {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enable test running",
              "default": true,
              "type": "boolean"
            },
            "coverage": {
              "description": "Collect coverage",
              "default": false,
              "type": "boolean"
            },
            "minCoverage": {
              "description": "Minimum coverage percentage",
              "default": 80,
              "type": "number",
              "minimum": 0,
              "maximum": 100
            }
          },
          "required": [
            "enabled",
            "coverage",
            "minCoverage"
          ],
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "workspace": {
      "description": "Workspace configuration",
      "type": "object",
      "properties": {
        "packageManager": {
          "description": "Package manager",
          "default": "pnpm",
          "type": "string",
          "enum": [
            "pnpm",
            "npm",
            "yarn"
          ]
        },
        "rootPath": {
          "description": "Monorepo root path"
        },
        "workspacePatterns": {
          "description": "Workspace package patterns",
          "default": [
            "packages/*",
            "apps/*"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoredWorkspaces": {
          "description": "Workspaces to ignore",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "packageManager",
        "workspacePatterns",
        "ignoredWorkspaces"
      ],
      "additionalProperties": false
    },
    "catalog": {
      "description": "Package catalog configuration",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enable package cataloging",
          "default": false,
          "type": "boolean"
        },
        "categories": {
          "description": "Package categories",
          "default": [],
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Category name",
                "type": "string"
              },
              "pattern": {
                "description": "Pattern to match packages",
                "type": "string"
              },
              "description": {
                "description": "Category description",
                "type": "string"
              }
            },
            "required": [
              "name",
              "pattern"
            ],
            "additionalProperties": false
          }
        },
        "generateDocs": {
          "description": "Generate catalog documentation",
          "default": false,
          "type": "boolean"
        },
        "outputPath": {
          "description": "Path to output catalog"
        }
      },
      "required": [
        "enabled",
        "categories",
        "generateDocs"
      ],
      "additionalProperties": false
    },
    "health": {
      "description": "Health check configuration",
      "type": "object",
      "properties": {
        "checks": {
          "description": "Health checks to run",
          "default": [
            "dependencies",
            "quality"
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "dependencies",
              "quality",
              "build",
              "tests",
              "documentation"
            ]
          }
        },
        "failFast": {
          "description": "Stop on first failure",
          "default": false,
          "type": "boolean"
        },
        "reportFormat": {
          "description": "Report format",
          "default": "markdown",
          "type": "string",
          "enum": [
            "json",
            "html",
            "markdown"
          ]
        },
        "outputPath": {
          "description": "Path to save health report"
        }
      },
      "required": [
        "checks",
        "failFast",
        "reportFormat"
      ],
      "additionalProperties": false
    },
    "packageJson": {
      "description": "Package.json hygiene configuration",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enable package.json hygiene checks",
          "default": true,
          "type": "boolean"
        },
        "scripts": {
          "description": "Script consistency configuration",
          "type": "object",
          "properties": {
            "enforce": {
              "description": "Enforce script presence across packages",
              "default": false,
              "type": "boolean"
            },
            "required": {
              "description": "Scripts that must exist in all packages (name -> command)",
              "default": {},
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "string"
              }
            },
            "recommended": {
              "description": "Scripts that should exist (warns if missing)",
              "default": {},
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "string"
              }
            },
            "forbidden": {
              "description": "Script names that should not exist",
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ignorePackages": {
              "description": "Package names/patterns to exclude from script checks",
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "enforce",
            "required",
            "recommended",
            "forbidden",
            "ignorePackages"
          ],
          "additionalProperties": false
        },
        "fields": {
          "description": "Package.json field validation",
          "type": "object",
          "properties": {
            "required": {
              "description": "Required fields in package.json (string or object with default)",
              "default": [
                "name",
                "version"
              ],
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "field": {
                        "description": "Field name",
                        "type": "string"
                      },
                      "default": {
                        "description": "Default value to use when auto-fixing"
                      }
                    },
                    "required": [
                      "field",
                      "default"
                    ],
                    "additionalProperties": false
                  }
                ]
              }
            },
            "forbidden": {
              "description": "Fields that should not exist",
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "validate": {
              "description": "Custom field validators",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "pattern": {
                    "description": "Regex pattern to match",
                    "type": "string"
                  },
                  "validator": {
                    "description": "Custom validation function",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": [
            "required",
            "forbidden"
          ],
          "additionalProperties": false
        },
        "consistency": {
          "description": "Consistency check options",
          "type": "object",
          "properties": {
            "checkLicense": {
              "description": "Ensure consistent license",
              "default": true,
              "type": "boolean"
            },
            "checkEngines": {
              "description": "Check Node.js engine versions",
              "default": true,
              "type": "boolean"
            },
            "checkRepository": {
              "description": "Validate repository field",
              "default": false,
              "type": "boolean"
            },
            "checkAuthor": {
              "description": "Validate author field",
              "default": false,
              "type": "boolean"
            }
          },
          "required": [
            "checkLicense",
            "checkEngines",
            "checkRepository",
            "checkAuthor"
          ],
          "additionalProperties": false
        },
        "autoFix": {
          "description": "Auto-fix configuration",
          "type": "object",
          "properties": {
            "addMissingScripts": {
              "description": "Add missing required scripts",
              "default": false,
              "type": "boolean"
            },
            "removeInvalidFields": {
              "description": "Remove forbidden fields",
              "default": false,
              "type": "boolean"
            }
          },
          "required": [
            "addMissingScripts",
            "removeInvalidFields"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "enabled"
      ],
      "additionalProperties": false
    },
    "ci": {
      "description": "CI-specific settings",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "CI mode",
          "default": false,
          "type": "boolean"
        },
        "failOnWarning": {
          "description": "Treat warnings as errors in CI",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "failOnWarning"
      ],
      "additionalProperties": false
    },
    "output": {
      "description": "Output configuration",
      "type": "object",
      "properties": {
        "format": {
          "description": "Output format",
          "default": "pretty",
          "type": "string",
          "enum": [
            "pretty",
            "json",
            "compact"
          ]
        },
        "verbose": {
          "description": "Verbose output",
          "default": false,
          "type": "boolean"
        },
        "silent": {
          "description": "Suppress output",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "format",
        "verbose",
        "silent"
      ],
      "additionalProperties": false
    },
    "plugins": {
      "description": "Plugins to load",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Plugin name",
            "type": "string"
          },
          "config": {
            "description": "Plugin-specific configuration",
            "type": "object",
            "propertyNames": {
              "type": "string"
            },
            "additionalProperties": {}
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      }
    },
    "extends": {
      "description": "Config files to extend from",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    }
  },
  "required": [
    "version"
  ],
  "additionalProperties": false,
  "title": "Monorepo Configuration",
  "$id": "./monorepo.schema.json",
  "description": "Configuration schema for monorepo-consistency tool"
}
